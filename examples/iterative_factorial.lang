; ax is counter
IN POPR ax

; if ax < 0
PUSHR ax
PUSH 0
JB ax_less_zero

; overflow if ax >= 13
PUSHR ax
PUSH 13
JAE ax_overflow

; bx is answer
PUSH 1 POPR bx

for:
; condition
    PUSHR ax
    PUSH 0
    JBE endfor

; body
    PUSHR ax
    PUSHR bx
    MUL
    POPR bx

; decrement
    PUSHR ax
    PUSH 1
    SUB
    POPR ax

    JMP for
endfor:

PUSHR bx
OUT

END

ax_overflow:
ECHO error
ECHO ax too big
ECHO integer overflow
END

ax_less_zero:
ECHO error
ECHO ax less than zero
END
